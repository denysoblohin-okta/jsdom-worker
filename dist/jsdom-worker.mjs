import e,{Response as t}from"node-fetch";function n(e){return{all:e=e||new Map,on:function(t,n){var o=e.get(t);o?o.push(n):e.set(t,[n])},off:function(t,n){var o=e.get(t);o&&(n?o.splice(o.indexOf(n)>>>0,1):e.set(t,[]))},emit:function(t,n){var o=e.get(t);o&&o.slice().map(function(e){e(n)}),(o=e.get("*"))&&o.slice().map(function(e){e(t,n)})}}}var o,r,s=(o=function(e,t){t=e.exports=function(){for(var e,n="",o=0;o<32;o++)e=16*t.random()|0,o>4&&o<21&&!(o%4)&&(n+="-"),n+=(12===o?4:16===o?3&e|8:e).toString(16);return n};var n=/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;t.isUUID=function(e){return n.test(e)},t.random=function(){return Math.random()}},o(r={exports:{}},r.exports),r.exports);const a="object"==typeof global?global:"object"==typeof globalThis?globalThis:void 0;a.URL||(a.URL={});let i=a.URL.$$objects;if(!i){i=new Map,a.URL.$$objects=i,a.URL.createObjectURL=e=>{let t=s();return i[t]=e,`blob:http://localhost/${t}`},a.URL.revokeObjectURL=e=>{let t=String(e).match(/^blob:http:\/\/localhost\/(.+)$/);t&&delete i[t[1]]};const e=Blob;a.Blob=function(t,n){const o=new e(t,n);return o._arr=t,o}}if(!a.fetch||!("jsdomWorker"in a.fetch)){let n=a.fetch||e;a.fetch=function(e,o){let r="object"==typeof e?e.url||e.href:e;if(r.match(/^blob:/)){const e=r.match(/[^/]+$/)[0],n=i[e];return n._arr?n._arr[0]:new Promise((e,o)=>{let r=new FileReader;r.onload=()=>{e(new(a.Response||t)(r.result,{status:200,statusText:"OK"}))},r.onerror=()=>{o(r.error)},r.readAsText(n)})}return n.call(this,e,o)},Object.defineProperty(a.fetch,"jsdomWorker",{configurable:!0,value:!0})}function c(e){this.type=e}a.document||(a.document={}),c.prototype.initEvent=Object,a.document.createEvent||(a.document.createEvent=function(e){return new(global[e]||c)(e)}),a.Worker=function(e,t){let o,r=[],s=n(),i=n(),c=!1,l={onmessage:null,dispatchEvent:s.emit,addEventListener:s.on,removeEventListener:s.off,postMessage(e){i.emit("message",{data:e})},fetch:a.fetch,importScripts(){}};s.on("message",e=>{if(c)return;let t=l.onmessage||o("onmessage");t&&t.call(l,e)}),this.addEventListener=i.on,this.removeEventListener=i.off,this.dispatchEvent=i.emit,i.on("message",e=>{this.onmessage&&this.onmessage(e)}),this.onmessage=null,this.postMessage=e=>{c||(null!=r?r.push(e):s.emit("message",{data:e}))},this.terminate=()=>{console.warn("Worker.prototype.terminate() not supported in jsdom-worker."),c=!0,r=null};const f=e=>{let t="var self=this,global=self";for(let e in l)t+=`,${e}=self.${e}`;o=Function(t+";\n"+e+'\nreturn function(n){return n=="onmessage"?onmessage:null;}').call(l);let n=r;r=null,n&&n.forEach(this.postMessage)},u=a.fetch(e);"string"==typeof u?f(u):u.then(e=>e.text()).then(e=>{f(e)}).catch(e=>{i.emit("error",e),console.error(e)})};
//# sourceMappingURL=jsdom-worker.mjs.map
